#pragma once
enum p1_states
{
	ST_UNKNOWN,

	_1_ST_IDLE,
	_1_ST_WALK_FORWARD,
	_1_ST_WALK_BACKWARD,
	_1_ST_JUMP_NEUTRAL,
	_1_ST_JUMP_FORWARD,
	_1_ST_JUMP_BACKWARD,
	_1_ST_CROUCH,
	_1_ST_PUNCH_STANDING_L,
	_1_ST_PUNCH_STANDING_M,
	_1_ST_PUNCH_STANDING_H,
	_1_ST_KICK_STANDING_L,
	_1_ST_KICK_STANDING_M,
	_1_ST_KICK_STANDING_H,
	_1_ST_PUNCH_NEUTRAL_JUMP,
	_1_ST_PUNCH_FORWARD_JUMP,
	_1_ST_PUNCH_BACKWARD_JUMP,
	_1_ST_PUNCH_CROUCH,
	_1_ST_HIT,
	_1_ST_STUN
};

enum p1_inputs
{
	_1_IN_LEFT_DOWN,
	_1_IN_LEFT_UP,
	_1_IN_RIGHT_DOWN,
	_1_IN_RIGHT_UP,
	_1_IN_LEFT_AND_RIGHT,
	_1_IN_JUMP,
	_1_IN_CROUCH_UP,
	_1_IN_CROUCH_DOWN,
	_1_IN_JUMP_AND_CROUCH,
	_1_IN_X, // X = PUNCH
	_1_IN_H, // H = HIT
	_1_IN_JUMP_FINISH,
	_1_IN_PUNCH_FINISH,
	_1_IN_HIT_FINISH
};

enum p2_states
{
	ST_UNKNOWN,

	_2_ST_IDLE,
	_2_ST_WALK_FORWARD,
	_2_ST_WALK_BACKWARD,
	_2_ST_JUMP_NEUTRAL,
	_2_ST_JUMP_FORWARD,
	_2_ST_JUMP_BACKWARD,
	_2_ST_CROUCH,
	_2_ST_PUNCH_STANDING_L,
	_2_ST_PUNCH_STANDING_M,
	_2_ST_PUNCH_STANDING_H,
	_2_ST_KICK_STANDING_L,
	_2_ST_KICK_STANDING_M,
	_2_ST_KICK_STANDING_H,
	_2_ST_PUNCH_NEUTRAL_JUMP,
	_2_ST_PUNCH_FORWARD_JUMP,
	_2_ST_PUNCH_BACKWARD_JUMP,
	_2_ST_PUNCH_CROUCH,
	_2_ST_HIT,
	_2_ST_STUN
};

enum p2_inputs
{
	_2_IN_LEFT_DOWN,
	_2_IN_LEFT_UP,
	_2_IN_RIGHT_DOWN,
	_2_IN_RIGHT_UP,
	_2_IN_LEFT_AND_RIGHT,
	_2_IN_JUMP,
	_2_IN_CROUCH_UP,
	_2_IN_CROUCH_DOWN,
	_2_IN_JUMP_AND_CROUCH,
	_2_IN_X, // X = PUNCH
	_2_IN_H, // H = HIT
	_2_IN_JUMP_FINISH,
	_2_IN_PUNCH_FINISH,
	_2_IN_HIT_FINISH
};
